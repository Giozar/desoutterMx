---
import Base from "@layouts/Base.astro";
import SubSubSubCategoriesList from "@components/herramientas/SubSubSubCategoriesList.astro";
import NavigationTools from "@components/herramientas/NavigationTools.astro";
const desoutterAPI = import.meta.env.PUBLIC_DESOUTTER_API || "https://7yc636gsjj.execute-api.us-east-1.amazonaws.com/prod";
const {categoryId, categoryName, subcategoryId, subcategoryName, subsubcategoryId, subsubcategoryName} = Astro.params;
const frontmatter = {
  title: "Desoutter Tools México",
  description: "Descripción de la Página",
  keywords: ["Palabra Clave 1", "Palabra Clave 2", "Palabra Clave 3"],
  name: "Nombre del Autor",
  language: "es",
  url: "URL_canónica_de_la_Página",
  facebookTitle: "Título para Compartir en Facebook",
  facebookDescription: "Descripción para Compartir en Facebook",
  facebookImage: "URL_de_la_Imagen_para_Facebook",
  facebookURL: "URL_canónica_de_la_Página_para_Facebook",
  twitterTitle: "Título para Compartir en Twitter",
  twitterDescription: "Descripción para Compartir en Twitter",
  twitterImage: "URL_de_la_Imagen_para_Twitter"
}

const path = `${import.meta.env.BASE_URL}herramientas/${categoryId}/${categoryName}/${subcategoryId}/${subcategoryName}/${subsubcategoryId}/${subsubcategoryName}`;

// Aquí va la petición fetch para recibir data
// Función para realizar la petición fetch por subsubcategoría
async function getSubsubsubcategories(categoryId:String|undefined, categoryName:String|undefined, subcategoryId:String|undefined, subcategoryName:String|undefined, subsubcategoryId:String|undefined, subsubcategoryName:String|undefined) {
  try {
    const response = 
    await fetch(`${desoutterAPI}/herramientas/${categoryId}/${categoryName}/${subcategoryId}/${subcategoryName}/${subsubcategoryId}/${subsubcategoryName}`);
    if (!response.ok) {
        // Si la respuesta no es exitosa, lanzar un error con el status
        throw new Error(`HTTP error! Status: ${response.status}`);
    }
    return response.json();
  } catch (error) {
     // Afirmación de tipo para indicar que 'error' es de tipo 'Error'
  console.error('Error en la solicitud:', (error as Error).message);
  }
}

// Realiza la petición fetch y almacena los datos en el objeto

const data = (subsubcategoryName !== '[object Object]') ? 
await getSubsubsubcategories(categoryId, categoryName, subcategoryId, subcategoryName, subsubcategoryId, subsubcategoryName).catch((error)=>{
    console.log('No hay subsubsubcategoria en esta sección');
    console.error(error);
   })  : {}


---
<Base frontmatter={frontmatter}>
  <NavigationTools />
    <SubSubSubCategoriesList data={data} path={path}/>
</Base>