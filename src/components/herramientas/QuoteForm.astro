---
import Icon from "astro-icon";
const {productModel} = Astro.props;
const errors = { 
    email_quote: '',
    phone_quote: '',
    name_quote: '',
    company_quote: '',
    tool_quote: '',
    quantity_quote: '',
    message_quote: ''
}
const {categoryId, categoryName, subcategoryId, subcategoryName, subsubcategoryId, subsubcategoryName, subsubsubcategoryId, subsubsubcategoryName, productId, productName} = Astro.params;
const baseTools = `/herramientas/${categoryId}/${categoryName}/${subcategoryId}/${subcategoryName}`
const baseSubsub = `/${subsubcategoryId}/${subsubcategoryName}`
const baseSubsubsub = `/${subsubsubcategoryId}/${subsubsubcategoryName}`
const baseProduct = `/p/${productId}/${productName}`
const desoutterAPI = import.meta.env.PUBLIC_DESOUTTER_API || "https://7yc636gsjj.execute-api.us-east-1.amazonaws.com/prod";
let urlFinal = baseTools;
if (subsubcategoryId) {
    urlFinal = baseTools + baseSubsub + baseProduct;
} else if (subsubsubcategoryId){
    urlFinal = baseTools + baseSubsub + baseSubsubsub + baseProduct
} else {
    urlFinal += baseProduct; 
}

if (Astro.request.method === 'POST') {
  try {
    const data = await Astro.request.formData()

    function getData(){
        if( data.has('email_quote')) {
            data.set("subject_quote","Cotización de herramientas");
            return{
                subject_quote: data.get('subject_quote'),
                email_quote : data.get('email_quote'),
                phone_quote : data.get('phone_quote'),
                name_quote : data.get('name_quote'),
                company_quote : data.get('company_quote'),
                tool_quote : data.get('tool_quote'),
                quantity_quote : data.get('quantity_quote'),
                message_quote : data.get('message_quote')
            }
        }

        if (data.has('email_demo')) {
            data.set("subject_demo","Demostración de herramientas");
            return {
                subject_demo: data.get('subject_demo'),
                email_demo : data.get('email_demo'),
                phone_demo : data.get('phone_demo'),
                name_demo : data.get('name_demo'),
                company_demo : data.get('company_demo'),
                availability : data.get('availability'),
                issue_demo : data.get('issue_demo'),
                tool_demo : data.get('tool_demo'),
                date_time_demo : data.get('date_time_demo')
            }
        }

        if (data.has('email_question')) {
            data.set("subject_question","Preguntas generales");
            return {
                subject_question: data.get('subject_question'),
                email_question : data.get('email_question'),
                phone_question : data.get('phone_question'),
                name_question : data.get('name_question'),
                company_question : data.get('company_question'),
                message_question : data.get('message_question')
            }
        }
        
    }

    const dataContact = getData();

    if (typeof dataContact?.name_quote !== 'string' || dataContact?.name_quote.length < 1) {
      errors.name_quote += 'Ingresa tu nombre completo. '
    }

    // console.log(dataContact);

    fetch(desoutterAPI + urlFinal, {
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
    },
    body: JSON.stringify(dataContact),
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
    })
    .then(responseData => {
        if (responseData.success) {
            console.log('Mensaje de éxito:', responseData.message);
        } else {
            console.error('Error en la solicitud:', responseData.message);
        }
    })
    .catch(error => {
        console.error('Error en la solicitud:', error);
    });


  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message)
    }
  }
}
---

<!-- Modal toggle -->
<button type="button" id="btn-quote" class="block w-full text-white bg-[#E40520] hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium text-sm px-5 py-1 text-center dark:bg-red-600 dark:hover:bg-[#E40520] dark:focus:ring-red-800">
    <div class="flex items-center space-x-2">
        <Icon pack="ph" name="calculator-fill" class="h-8 w-8 text-white" />
        <span>Obtener una cotización</span>
    </div>
</button>

<!-- Main modal -->
<!-- agregar flex para centrar -->
<div id="form-quote" class="fixed hidden justify-center items-center bg-white bg-opacity-70 top-0 bottom-0 left-0 right-0 z-50 w-full overflow-x-hidden overflow-y-auto md:inset-0 max-h-screen">
    <div class="relative border shadow-[0px_0px_10px_10px_rgba(0,0,0,0.3)] w-full max-w-md max-h-full">
        <!-- Modal content -->
        <div class="relative bg-white shadow dark:bg-gray-700">
            <button type="button" id="btn-close-quote" class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white">
                <Icon pack="ic" name="baseline-close" class="h-8 w-8" />
                  <span class="sr-only">Cerrar formulario</span>
              </button>
              <div class="px-6 py-6 lg:px-8">
                    <h3 class="mb-4 text-xl font-medium text-gray-900 dark:text-white">Solicitud de cotización</h3>
                    <form method="post" id="dialog-quote-form">

                        <fieldset class="grid md:grid-cols-2 md:gap-6">
                            <div class="relative z-0 w-full mb-6 group">
                                <input type="text" name="tool_quote" id="tool_quote" value={productModel} class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-red-500 focus:outline-none focus:ring-0 focus:border-red-600 peer" required>
                                <label for="tool_quote" class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-red-600 peer-focus:dark:text-red-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Herramienta</label>
                                <p class="text-red-500 border-t border-red-500 hidden" id="error_tool_quote"></p>
                            </div>

                            <div class="relative z-0 w-full mb-6 group">
                                <input type="number" name="quantity_quote" id="quantity_quote" min="1" class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-red-500 focus:outline-none focus:ring-0 focus:border-red-600 peer" value="1" required>
                                <label for="quantity_quote" class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-red-600 peer-focus:dark:text-red-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Cantidad</label>
                                <p class="text-red-500 border-t border-red-500 hidden" id="error_quantity_quote"></p>
                            </div>
                        </fieldset>

                        <div class="relative z-0 w-full mb-6 group">
                            <input type="email" name="email_quote" id="email_quote" class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-red-500 focus:outline-none focus:ring-0 focus:border-red-600 peer" placeholder=" " required />
                            <label for="email_quote" class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-red-600 peer-focus:dark:text-red-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Dirección de correo electrónico</label>
                            <p class="text-red-500 border-t border-red-500 hidden" id="error_email_quote"></p>
                        </div>
                        <fieldset class="grid md:grid-cols-1 md:gap-6">
                            <div class="relative z-0 w-full mb-6 group">
                                <input type="text" name="name_quote" id="name_quote" class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-red-500 focus:outline-none focus:ring-0 focus:border-red-600 peer" placeholder=" " required />
                                <p class="text-red-500 border-t border-red-500 hidden" id="error_name_quote"></p>
                                <label for="name_quote" class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 -top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-red-600 peer-focus:dark:text-red-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-[0.5]">Nombre completo</label>
                            </div>
                        </fieldset>

                        <fieldset class="grid md:grid-cols-2 md:gap-6">
                            <div class="relative z-0 w-full mb-6 group">
                                <input type="tel" pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}" name="phone_quote" id="phone_quote" class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-red-500 focus:outline-none focus:ring-0 focus:border-red-600 peer" placeholder="ej. 123 456 7890" required />
                                <label for="phone_quote" class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-[0.5] scale-75 -top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-red-600 peer-focus:dark:text-red-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-0">Número telefónico</label>
                                <p class="text-red-500 border-t border-red-500 hidden" id="error_phone_quote"></p>
                            </div>
                            <div class="relative z-0 w-full mb-6 group">
                                <input type="text" name="company_quote" id="company_quote" class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-red-500 focus:outline-none focus:ring-0 focus:border-red-600 peer" placeholder=" " required />
                                <label for="company_quote" class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-red-600 peer-focus:dark:text-red-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Empresa</label>
                                <p class="text-red-500 border-t border-red-500 hidden" id="error_company_quote"></p>
                            </div>
                        </fieldset>

                        <fieldset>
                            <div class="relative z-0 w-full mb-6 group">
                                <textarea name="message_quote" id="message_quote" class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-red-500 focus:outline-none focus:ring-0 focus:border-red-600 peer" placeholder=" " required cols="30" rows="10"></textarea>
                                <label for="message_quote" class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-red-600 peer-focus:dark:text-red-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Mensaje</label>
                                <p class="text-red-500 border-t border-red-500 hidden" id="error_message_quote"></p>
                            </div>
                        </fieldset>

                        <button 
                            type="submit"
                            data-sitekey="6LfiuA8pAAAAAAkXWHT_SsdkFSuFGi3c9qpdvfmB"
                            data-callback='onChange'
                            data-action='change'
                            class="g-recaptcha text-white bg-[#E40520] hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-red-600 dark:hover:bg-[#E40520] dark:focus:ring-red-800">
                            Enviar
                        </button>
                    </form>
                </div>
                <div id="success-message" class="hidden text-green-300 text-center">¡El formulario se envió con éxito!</div>
          </div>
      </div>
  </div>
  
  <script>
     function init() {
        const form = document.getElementById("dialog-quote-form");
        const successMessage = document.getElementById('success-message');

        function showSuccessMessage(form:HTMLElement, successMessage:HTMLElement){
            if(form && successMessage){
                form?.classList.add('hidden');
                successMessage?.classList.remove('hidden');
                setTimeout(() => {
                    form?.submit();
                    form?.reset();
                    form?.classList.remove('hidden');
                    successMessage?.classList.add('hidden');
                }, 2000);
            } else {
                console.log('elements not found');
            }
        } 
        const btnQuote = document.querySelector("#btn-quote"); 
        const formQuote = document.querySelector("#form-quote"); 
        const btnCloseQuote = document.querySelector("#btn-close-quote");

        btnQuote?.addEventListener('click', ()=>{
            formQuote?.classList.replace('hidden', 'flex');
        });

        btnCloseQuote?.addEventListener('click', ()=>{
            formQuote?.classList.replace('flex','hidden');
        })


        document.getElementById('phone_quote')?.addEventListener('input', function (e) {
        // Eliminar cualquier caracter que no sea un número
        const phoneNumber = e.target.value.replace(/\D/g, '').slice(0, 10);

        // Aplicar el formato
        let formattedPhoneNumber = '';
        for (let i = 0; i < phoneNumber.length; i++) {
                if (i === 3 || i === 6) {
                    formattedPhoneNumber += '-';
                }
                formattedPhoneNumber += phoneNumber[i];
            }

            // Actualizar el valor del campo de entrada
            e.target.value = formattedPhoneNumber;
        });

        function onChange(token:string) {
            if (token) {
                // console.log("No eres un robot");
                try {
                    if (form && successMessage) {
                        if(form.checkValidity()){
                            showSuccessMessage(form, successMessage);
                        } else {
                            const formElements = form.elements;

                            Array.from(formElements).forEach(element => {
                                if (element.checkValidity() === false) {
                                    const errorMessage = document.getElementById(`error_${element.name}`);
                                    // if (element.id === "email_service"){
                                    //     console.log("es correo");
                                    // }
                                    if (errorMessage) {
                                        errorMessage.textContent = 'Falta validar campo';
                                        errorMessage.classList.replace("hidden", "block");

                                        setTimeout(() => {
                                            errorMessage.textContent = 'Falta validar campo';
                                            errorMessage.classList.replace("block", "hidden");
                                        },4000)
                                    }
                                    
                                }
                            });
                        }
                    } else {
                        console.log("Ocurrió un error");
                    }
                } catch (error) {
                    console.error(error)
                }
            } else {
              console.log("Eres un robot");
            }
        }

        window.onChange = onChange;

    }
    window.onload = init;
    document.addEventListener('DOMContentLoaded', init);
    init();
    document.addEventListener('astro:page-load', init);
    
  </script>