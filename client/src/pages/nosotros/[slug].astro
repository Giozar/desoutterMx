---
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'
import Meet from '../../layouts/Meet.astro'
export const prerender = true

const frontmatter = {
  title: "Título de la Página",
  description: "Descripción de la Página",
  keywords: ["Palabra Clave 1", "Palabra Clave 2", "Palabra Clave 3"],
  name: "Nombre del Autor",
  language: "es",
  url: "URL_canónica_de_la_Página",
  facebookTitle: "Título para Compartir en Facebook",
  facebookDescription: "Descripción para Compartir en Facebook",
  facebookImage: "URL_de_la_Imagen_para_Facebook",
  facebookURL: "URL_canónica_de_la_Página_para_Facebook",
  twitterTitle: "Título para Compartir en Twitter",
  twitterDescription: "Descripción para Compartir en Twitter",
  twitterImage: "URL_de_la_Imagen_para_Twitter"
}

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  let info = await getCollection('nosotros', ({ data }) => {
    return data
  })
  return info.map((post, i) => ({
    params: { slug: post.slug },
    props: {
      post,
      prev: i > 0 && info[i - 1],
      next: i < info.length - 1 && info[i + 1]
    }
  }))
}

export interface Props {
  post: CollectionEntry<'nosotros'>
  prev: CollectionEntry<'nosotros'>
  next: CollectionEntry<'nosotros'>
}

// 2. When its time to render, you can get the entry directly from the prop
const { post, prev, next } = Astro.props

// @ts-ignore
const { Content } = await post.render()
let fm = post.data
// console.log(post.data)
// console.log(Content)
---

<Meet frontmatter={frontmatter} {prev} {next}>
  <Content />
</Meet>
